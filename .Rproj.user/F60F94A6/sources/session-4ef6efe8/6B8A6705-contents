lapply(c("tidyverse","DT","leaflet","sf","htmltools", "DBI", "mapview","leafpop","RPostgres","dplyr","leaflet","leafsync","terra","raster","stars", "lwgeom","leaflet.extras2","RColorBrewer","tidygeocoder"), require, character.only=T)

## Import data
bounding_box <-  sf::read_sf("/home/ricardo/gobernanza_ambiental/docs/data/bbox.geojson")
ghs <- sf::read_sf("/home/ricardo/gobernanza_ambiental/docs/data/ghs_aoi.geojson")
barrios_porto_alegre <- sf::read_sf("/home/ricardo/gobernanza_ambiental/docs/data/barrios.geojson") 
nuts_rio_grande_do_sul <-sf::read_sf("/home/ricardo/gobernanza_ambiental/docs/data/rs_municipios.geojson")
flooding <- sf::read_sf("/home/ricardo/gobernanza_ambiental/docs/data/flooding_porto.geojson")
rs_flood <- sf::read_sf("/home/ricardo/gobernanza_ambiental/docs/data/flooding_sul_subdivided.geojson")
rs <- sf::read_sf("/home/ricardo/gobernanza_ambiental/docs/data/rs_unidad_federal.geojson")

### geocoding



eisenberg_connection <- DBI::dbConnect(RPostgres::Postgres(),
                                       user= "docker",
                                       password = "docker",
                                       host = "localhost",
                                       dbname="gis",
                                       port = 25432)




some_addresses <- tibble::tribble(
  ~name, ~addr,
  "number one", "Mathias Velho,Canoas",
  "number_1" ,"Beira-Rio stadium",
  "number_2", "Airport in Porto Alegre",
  "number_8","Historic market, Porto Alegre",
  "number_11","Eldorado do Sul",
  "number_13","Encantado, Rio Grande do Sul",
  "number_10","Canoas",
  "number_26","Salgado Filho International Airport, Porto Alegre,Rio Grande do Sul",
  "number_27"," Roca Sales, Rio Grande do Sul",
  "number_28","Roca Sales, Rio Grande do Sul,",
  "number_29","in Encantado,",
  "number_31","Lajeado, Rio Grande do Sul state,",
  "number_","Humaitá, Porto Alegre, Rio Grande do Sul",
)

lat_longs <- some_addresses |>
  geocode(addr, method="osm", lat = latitude, lon = longitude)

## Import media
disaster_points <- read_csv("~/gobernanza_ambiental/disaster_points.csv")
disaster_points_subset <- disaster_points[c(1,2,6, 8, 10,11),]|> mutate(
  image = c("https://i.imgur.com/fHKVSkp.png",
            "https://i.imgur.com/iS07vBA.png",
            "https://i.imgur.com/sFAQaPP.png",
            "https://i.imgur.com/sqQ8dRa.png",
            "https://i.imgur.com/nlz90c4.png",
            "https://i.imgur.com/GkaWmtc.png"))


rs_nuts_union <- st_union(nuts_rio_grande_do_sul)  |>  sf::st_as_sfc()
####  addPolygons(data = rs_nuts_union, color = "white", fillOpacity = 0.4, stroke =TRUE, weight = 0.5, popup=~paste0("<b>Name: </b>",NM_MUN,"<br>", "<b> Area (km²) </b>", round(AREA_KM2))) |>  

## Visualing
leaflet()  |> 
  addProviderTiles("OpenStreetMap.HOT")  |> 
   addPolygons(data = bounding_box, color = "red", fillOpacity = 0) |> 
  addPolygons(data = rs_flood, color = "#abd3df", fillOpacity = .5, stroke = TRUE, weight= 0.5) |> 
  addPolygons(data = ghs, color = "yellow", fillOpacity = 0, stroke =TRUE, weight = 0.8, popup=~paste0("<b> ID </b>", id_uc_g0, "<br>", "<b> Population </b>", pop_2020, "<br>", "<b> Buildings (m²) </b>", bu_m2_2020, "</b>")) |> 
  addMarkers(data = disaster_points_subset,
             lng = ~longitude,
             lat = ~latitude,
             popup = ~paste0("<b>Location: </b>", addr, "<br/>",
                             "<img src = ", image, " width=600>")) |> 
  addMiniMap()
